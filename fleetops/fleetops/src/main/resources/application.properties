spring.application.name=fleetops
spring.datasource.url=jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}

spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}

spring.jpa.hibernate.ddl-auto=update

server.port=8080

# Kafka Broker
spring.kafka.bootstrap-servers=34.122.122.139:9092


# Consumer Config
spring.kafka.consumer.group-id=233
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Producer Config
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.admin.auto-create=true
spring.kafka.admin.properties.allow.auto.create.topics=true


#spring redis configurations
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
spring.data.redis.password=${REDIS_PASS}
spring.data.redis.database=0
spring.data.redis.username=default
spring.data.redis.timeout=60000ms
spring.main.allow-bean-definition-overriding=true